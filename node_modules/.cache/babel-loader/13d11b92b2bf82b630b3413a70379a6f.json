{"ast":null,"code":"import _objectSpread from \"C:/Users/fathe/Desktop/keeper-app-part-1-starting/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:/Users/fathe/Desktop/keeper-app-part-1-starting/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\fathe\\\\Desktop\\\\keeper-app-part-1-starting\\\\src\\\\componet\\\\CreateArea.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport AddIcon from '@material-ui/icons/Add';\nimport Fab from '@material-ui/core/Fab';\nimport Zoom from '@material-ui/core/Zoom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CreateArea(props) {\n  _s();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      animations = _useState2[0],\n      setAnimations = _useState2[1];\n\n  var _useState3 = useState({\n    title: \"\",\n    content: \"\"\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      notes = _useState4[0],\n      setNotes = _useState4[1];\n\n  function handleChange(event) {\n    var _event$target = event.target,\n        value = _event$target.value,\n        name = _event$target.name;\n    setNotes(function (preval) {\n      return _objectSpread(_objectSpread({}, preval), {}, {\n        [name]: value\n      });\n    });\n  }\n\n  function handleAnimation() {\n    setAnimations(true);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"create-note\",\n      children: [animations && /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleChange,\n        name: \"title\",\n        placeholder: \"Title\",\n        value: notes.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        onChange: handleChange,\n        onClick: handleAnimation,\n        name: \"content\",\n        placeholder: \"Take a note...\",\n        rows: animations ? \"3\" : \"1\",\n        value: notes.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Zoom, {\n        in: animations,\n        children: /*#__PURE__*/_jsxDEV(Fab, {\n          onClick: function onClick() {\n            props.addTo(notes);\n            setNotes({\n              title: \"\",\n              content: \"\"\n            });\n          },\n          children: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CreateArea, \"l+lsZ+/jfMpzXBVDg6AbVu9XvO4=\");\n\n_c = CreateArea;\nexport default CreateArea;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateArea\");","map":{"version":3,"sources":["C:/Users/fathe/Desktop/keeper-app-part-1-starting/src/componet/CreateArea.jsx"],"names":["React","useState","AddIcon","Fab","Zoom","CreateArea","props","animations","setAnimations","title","content","notes","setNotes","handleChange","event","target","value","name","preval","handleAnimation","addTo"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAAA;;AAAA,kBAEaL,QAAQ,CAAC,KAAD,CAFrB;AAAA;AAAA,MAEhBM,UAFgB;AAAA,MAEJC,aAFI;;AAAA,mBAGGP,QAAQ,CAAC;AAC/BQ,IAAAA,KAAK,EAAE,EADwB;AAE/BC,IAAAA,OAAO,EAAE;AAFsB,GAAD,CAHX;AAAA;AAAA,MAGhBC,KAHgB;AAAA,MAGTC,QAHS;;AASvB,WAASC,YAAT,CAAsBC,KAAtB,EAA4B;AAAA,wBACFA,KAAK,CAACC,MADJ;AAAA,QACjBC,KADiB,iBACjBA,KADiB;AAAA,QACVC,IADU,iBACVA,IADU;AAExBL,IAAAA,QAAQ,CAAC,UAACM,MAAD,EAAY;AACjB,6CAAWA,MAAX;AAAmB,SAACD,IAAD,GAAQD;AAA3B;AACH,KAFO,CAAR;AAGH;;AAED,WAASG,eAAT,GAA0B;AACxBX,IAAAA,aAAa,CAAC,IAAD,CAAb;AACD;;AAEH,sBACE;AAAA,2BACE;AAAM,MAAA,SAAS,EAAC,aAAhB;AAAA,iBACGD,UAAU,iBACX;AACA,QAAA,QAAQ,EAAEM,YADV;AAEA,QAAA,IAAI,EAAC,OAFL;AAGA,QAAA,WAAW,EAAC,OAHZ;AAIA,QAAA,KAAK,EAAEF,KAAK,CAACF;AAJb;AAAA;AAAA;AAAA;AAAA,cAFF,eAQE;AACA,QAAA,QAAQ,EAAEI,YADV;AAEA,QAAA,OAAO,EAAEM,eAFT;AAGA,QAAA,IAAI,EAAC,SAHL;AAIA,QAAA,WAAW,EAAC,gBAJZ;AAKA,QAAA,IAAI,EAAEZ,UAAU,GAAG,GAAH,GAAS,GALzB;AAMA,QAAA,KAAK,EAAEI,KAAK,CAACD;AANb;AAAA;AAAA;AAAA;AAAA,cARF,eAeE,QAAC,IAAD;AAAM,QAAA,EAAE,EAAEH,UAAV;AAAA,+BACE,QAAC,GAAD;AAAK,UAAA,OAAO,EAAE,mBAAM;AAClBD,YAAAA,KAAK,CAACc,KAAN,CAAYT,KAAZ;AACAC,YAAAA,QAAQ,CAAC;AAAEH,cAAAA,KAAK,EAAC,EAAR;AAAYC,cAAAA,OAAO,EAAC;AAApB,aAAD,CAAR;AACD,WAHD;AAAA,iCAGI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAfF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD;;GA/CQL,U;;KAAAA,U;AAiDT,eAAeA,UAAf","sourcesContent":["import React, {useState} from \"react\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport Zoom from '@material-ui/core/Zoom';\r\n\r\nfunction CreateArea(props) {\r\n  \r\n    const [animations, setAnimations] = useState(false)\r\n    const [notes, setNotes] = useState({\r\n        title: \"\",\r\n        content: \"\"\r\n    });\r\n    \r\n\r\n    function handleChange(event){\r\n        const {value, name} = event.target;\r\n        setNotes((preval) => {\r\n            return {...preval, [name]: value}            \r\n        })\r\n    }\r\n\r\n    function handleAnimation(){\r\n      setAnimations(true);\r\n    }\r\n    \r\n  return (\r\n    <div>\r\n      <form className=\"create-note\">\r\n        {animations && (\r\n        <input \r\n        onChange={handleChange} \r\n        name=\"title\" \r\n        placeholder=\"Title\" \r\n        value={notes.title}           \r\n        />)}\r\n        <textarea \r\n        onChange={handleChange}\r\n        onClick={handleAnimation} \r\n        name=\"content\" \r\n        placeholder=\"Take a note...\" \r\n        rows={animations ? \"3\" : \"1\"} \r\n        value={notes.content} />\r\n        <Zoom in={animations}>\r\n          <Fab onClick={() => {\r\n            props.addTo(notes);\r\n            setNotes({ title:\"\", content:\"\"});\r\n          }} ><AddIcon /></Fab>\r\n        </Zoom>\r\n        \r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreateArea;"]},"metadata":{},"sourceType":"module"}